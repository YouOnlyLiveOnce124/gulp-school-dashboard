/**
 * –°–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

// –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initApp(fetchSchools, loadRegions, pageSize) {
  await Promise.all([fetchSchools(1, pageSize, null, false), loadRegions()])
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤
async function loadRegionsData(getRegionsCallback) {
  try {
    const regions = await getRegionsCallback()
    console.log('‚úÖ –†–µ–≥–∏–æ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', regions.length, '—à—Ç.')
    return regions
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤:', error)
    return []
  }
}

console.log('‚úÖ initService –∑–∞–≥—Ä—É–∂–µ–Ω!')

const API_BASE_URL = 'https://schooldb.skillline.ru/api'

/**
 * –ë–∞–∑–æ–≤—ã–π HTTP-–∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API —à–∫–æ–ª
 */
async function apiRequest(endpoint, params = {}) {
  try {
    const queryParams = new URLSearchParams(params).toString()
    const url = `${API_BASE_URL}${endpoint}${queryParams ? `?${queryParams}` : ''}`

    console.log('üîÑ API Request:', url)

    const response = await fetch(url)

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`)
    }

    const data = await response.json()

    if (!data.status) {
      throw new Error(data.message || 'API returned false status')
    }

    return data.data
  } catch (error) {
    console.error('‚ùå API Request failed:', error)
    throw error
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —à–∫–æ–ª —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
 */
async function getSchools(page = 1, count = 10, regionId = null, status = null) {
  const params = { page, count }
  if (regionId) params.region_id = regionId
  if (status && status !== 'all') params.status = status
  return await apiRequest('/schools', params)
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
 */
async function getRegions() {
  return await apiRequest('/regions')
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã—Ö –æ–∫—Ä—É–≥–æ–≤
 */
async function getFederalDistricts() {
  return await apiRequest('/federalDistricts')
}

/**
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —à–∫–æ–ª—ã –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
 */
function transformSchoolData(schoolsData) {
  return schoolsData.map((school) => ({
    uuid: school.uuid,
    name: school.edu_org?.full_name || '–ù–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è',
    region: school.edu_org?.region?.name || '–ù–µ —É–∫–∞–∑–∞–Ω',
    address: school.edu_org?.contact_info?.post_address || '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω',
    education_level:
      school.supplements?.[0]?.educational_programs?.[0]?.edu_level?.name || '–ù–µ —É–∫–∞–∑–∞–Ω',
    status: school.supplements?.[0]?.status?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
  }))
}

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —à–∫–æ–ª–∞–º–∏ (API + —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
 */

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function handlePageChange(
  page,
  fetchCallback,
  searchValue,
  selectedStatus,
  currentRegion,
  selectedPageSize
) {
  if (searchValue.trim() !== '' || selectedStatus !== 'all') {
    // –î–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    return page
  } else {
    // –î–ª—è –Ω–µ—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∂–∞–µ–º —Å API
    if (fetchCallback) {
      await fetchCallback(page, selectedPageSize, currentRegion, false)
    }
    return page
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function handlePageSizeChange(newSize, fetchCallback, currentRegion) {
  if (fetchCallback) {
    fetchCallback(1, newSize, currentRegion, false)
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
async function handleRetry(fetchCallback, page, pageSize, currentRegion) {
  if (fetchCallback) {
    await fetchCallback(page, pageSize, currentRegion, false)
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function handleFirstPage(fetchCallback, pageSize, currentRegion) {
  if (fetchCallback) {
    await fetchCallback(1, pageSize, currentRegion, false)
  }
}

/**
 * –û–±—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã
 */

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–∞ —à–∫–æ–ª—ã
function validateSchoolType(newType) {
  if (newType !== 'all') {
    alert('–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤–∏–¥–∞–º —É—á—Ä–µ–∂–¥–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä.')
    return 'all'
  }
  return newType
}

// –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏
function clearError() {
  return null
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
function formatDateRange(selectedDateRange) {
  if (!selectedDateRange || !selectedDateRange.start || !selectedDateRange.end) {
    return '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥'
  }

  const start = new Date(selectedDateRange.start + 'T00:00:00')
  const end = new Date(selectedDateRange.end + 'T00:00:00')

  const format = (date) => {
    const day = date.getDate().toString().padStart(2, '0')
    const month = (date.getMonth() + 1).toString().padStart(2, '0')
    const year = date.getFullYear()
    return `${day}.${month}.${year}`
  }

  return `${format(start)} - ${format(end)}`
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç
 */
function applyDateRange(range, callback) {
  if (callback) callback(range)
  console.log('üìÖ –í—ã–±—Ä–∞–Ω –¥–∏–∞–ø–∞–∑–æ–Ω:', range.start, '–¥–æ', range.end)
}

/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –≤ TXT
 */
function exportSchoolsToTxt(selectedSchools, allSchools) {
  if (selectedSchools.length === 0) {
    alert('‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π —à–∫–æ–ª—ã –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞')
    return
  }

  const selectedData = allSchools.filter((school) => selectedSchools.includes(school.uuid))

  let textContent = '–≠–∫—Å–ø–æ—Ä—Ç —à–∫–æ–ª\n\n'
  selectedData.forEach((school, index) => {
    textContent += `${index + 1}. ${school.name}\n`
    textContent += `   –†–µ–≥–∏–æ–Ω: ${school.region}\n`
    textContent += `   –ê–¥—Ä–µ—Å: ${school.address}\n`
    textContent += `   –£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: ${school.education_level}\n`
    textContent += `   –°—Ç–∞—Ç—É—Å: ${school.status}\n`
    textContent += '‚îÄ'.repeat(50) + '\n'
  })

  textContent += `\n–í—Å–µ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${selectedData.length} —à–∫–æ–ª`

  const blob = new Blob([textContent], { type: 'text/plain;charset=utf-8' })
  const url = URL.createObjectURL(blob)
  const link = document.createElement('a')
  link.href = url
  link.download = `schools_export_${new Date().toISOString().split('T')[0]}.txt`
  link.click()

  alert(`‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${selectedData.length} —à–∫–æ–ª –≤ TXT —Ñ–∞–π–ª`)
}

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —à–∫–æ–ª
 */

function filterSchools(schools, searchSchools, searchValue, selectedStatus) {
  const sourceArray = searchValue.trim() !== '' ? searchSchools : schools
  let filtered = sourceArray

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É
  if (selectedStatus !== 'all') {
    filtered = filtered.filter((school) => {
      const schoolStatus = school.status || '–ù–µ—Ç —Å—Ç–∞—Ç—É—Å–∞'
      if (selectedStatus === 'active') {
        return schoolStatus === '–î–µ–π—Å—Ç–≤—É—é—â–µ–µ'
      } else if (selectedStatus === 'inactive') {
        return schoolStatus === '–ù–µ–¥–µ–π—Å—Ç–≤—É—é—â–µ–µ'
      }
      return false
    })
  }

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫—É
  if (searchValue.trim() !== '') {
    const searchTerm = searchValue.toLowerCase().trim()
    filtered = filtered.filter((school) => {
      return school.name.toLowerCase().includes(searchTerm)
    })
    console.log('üîç –ù–∞–π–¥–µ–Ω–æ —à–∫–æ–ª:', filtered.length, '–∏–∑', searchSchools.length)
  }

  return filtered
}

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
 */

// getDisplayedSchools - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —à–∫–æ–ª—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—Å–ª–∞–π—Å–∏—Ç –º–∞—Å—Å–∏–≤)
function getDisplayedSchools(
  filteredSchools,
  schools,
  searchValue,
  selectedStatus,
  filteredCurrentPage,
  selectedPageSize
) {
  if (searchValue.trim() !== '' || selectedStatus !== 'all') {
    // –ü—Ä–∏ –ø–æ–∏—Å–∫–µ/—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º filteredSchools
    const startIndex = (filteredCurrentPage - 1) * selectedPageSize
    const endIndex = startIndex + selectedPageSize
    return filteredSchools.slice(startIndex, endIndex)
  } else {
    // –ë–ï–ó –ø–æ–∏—Å–∫–∞/—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–∂–µ —Å–ª–∞–π—Å–∏–º schools –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const startIndex = (filteredCurrentPage - 1) * selectedPageSize
    const endIndex = startIndex + selectedPageSize
    return schools.slice(startIndex, endIndex)
  }
}

// getTotalPages - –≤—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ç–æ—Ä–∞
function getTotalPages(filteredSchools, totalPages, searchValue, selectedStatus, selectedPageSize) {
  if (searchValue.trim() !== '' || selectedStatus !== 'all') {
    return Math.ceil(filteredSchools.length / selectedPageSize)
  } else {
    return totalPages
  }
}

// getCurrentPage - –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –ø–∞–≥–∏–Ω–∞—Ç–æ—Ä–µ
function getCurrentPage(filteredCurrentPage, currentPage, searchValue, selectedStatus) {
  if (searchValue.trim() !== '' || selectedStatus !== 'all') {
    return filteredCurrentPage
  } else {
    return currentPage
  }
}

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å –¥–µ–±–∞—É–Ω—Å–æ–º
 */

let searchTimeout = null

// –ü–æ–∏—Å–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π (–¥–µ–±–∞—É–Ω—Å)
function handleSearch(searchValue, callback) {
  clearTimeout(searchTimeout)
  searchTimeout = setTimeout(() => {
    console.log('üîç –ü–æ–∏—Å–∫:', searchValue)
    if (callback) callback()
  }, 300)
}

// –°–±—Ä–æ—Å –ø–æ–∏—Å–∫–∞
function clearSearch() {
  clearTimeout(searchTimeout)
  searchTimeout = null
}

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —à–∫–æ–ª (—á–µ–∫–±–æ–∫—Å—ã)
 */

// –í—ã–±—Ä–∞—Ç—å/—Å–Ω—è—Ç—å –≤—Å–µ —à–∫–æ–ª—ã –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function handleSelectAll(selectedSchools, displayedSchools, isSelected) {
  if (isSelected) {
    const currentPageIds = displayedSchools.map((school) => school.uuid)
    return [...new Set([...selectedSchools, ...currentPageIds])]
  } else {
    const currentPageIds = displayedSchools.map((school) => school.uuid)
    return selectedSchools.filter((id) => !currentPageIds.includes(id))
  }
}

// –í—ã–±—Ä–∞—Ç—å/—Å–Ω—è—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —à–∫–æ–ª—É
function handleSelectSchool(selectedSchools, schoolId, isSelected) {
  if (isSelected) {
    if (!selectedSchools.includes(schoolId)) {
      return [...selectedSchools, schoolId]
    }
  } else {
    return selectedSchools.filter((id) => id !== schoolId)
  }
  return selectedSchools
}

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
 */

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
function sortSchools(schools, sortBy, sortDirection) {
  if (!sortBy || !sortDirection) {
    return schools // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  }

  // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞ —á—Ç–æ–±—ã –Ω–µ –º—É—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª
  const sortedSchools = [...schools]

  sortedSchools.sort((a, b) => {
    const valueA = a[sortBy] || ''
    const valueB = b[sortBy] || ''

    // –î–ª—è —Å—Ç—Ä–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º localeCompare
    if (typeof valueA === 'string' && typeof valueB === 'string') {
      return sortDirection === 'asc'
        ? valueA.localeCompare(valueB, 'ru')
        : valueB.localeCompare(valueA, 'ru')
    }

    // –î–ª—è —á–∏—Å–µ–ª –∏ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤
    if (valueA < valueB) return sortDirection === 'asc' ? -1 : 1
    if (valueA > valueB) return sortDirection === 'asc' ? 1 : -1
    return 0
  })

  return sortedSchools
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
function getNextSortDirection(currentSortBy, newSortBy, currentDirection) {
  // –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –¥—Ä—É–≥—É—é –∫–æ–ª–æ–Ω–∫—É - –Ω–∞—á–∏–Ω–∞–µ–º —Å –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è
  if (currentSortBy !== newSortBy) {
    return 'asc'
  }

  // –¶–∏–∫–ª: asc -> desc -> —Å–±—Ä–æ—Å
  if (currentDirection === 'asc') return 'desc'
  if (currentDirection === 'desc') return ''
  return 'asc'
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
window.sortSchools = sortSchools
window.getNextSortDirection = getNextSortDirection

console.log('‚úÖ sortUtils.js –∑–∞–≥—Ä—É–∂–µ–Ω')

const BaseButton = {
  name: 'BaseButton',
  props: {
    variant: {
      type: String,
      default: 'primary',
      validator: (value) => ['primary', 'secondary', 'accent'].includes(value),
    },
    disabled: { type: Boolean, default: false },
  },
  emits: ['click'],
  template: `
    <button :class="['base-button', 'base-button--' + variant, { 'base-button--disabled': disabled }]"
            :disabled="disabled"
            @click="$emit('click')">
      <slot></slot>
    </button>
  `,
}

const BaseCalendar = {
  name: 'BaseCalendar',

  emits: ['save', 'cancel'],

  data() {
    const today = new Date()
    return {
      today: today,
      currentMonthIndex: today.getMonth(),
      currentYear: today.getFullYear(),
      selectedRange: {
        start: null,
        end: null,
      },
    }
  },

  computed: {
    currentMonthName() {
      const months = [
        '–Ø–Ω–≤–∞—Ä—å',
        '–§–µ–≤—Ä–∞–ª—å',
        '–ú–∞—Ä—Ç',
        '–ê–ø—Ä–µ–ª—å',
        '–ú–∞–π',
        '–ò—é–Ω—å',
        '–ò—é–ª—å',
        '–ê–≤–≥—É—Å—Ç',
        '–°–µ–Ω—Ç—è–±—Ä—å',
        '–û–∫—Ç—è–±—Ä—å',
        '–ù–æ—è–±—Ä—å',
        '–î–µ–∫–∞–±—Ä—å',
      ]
      return `${months[this.currentMonthIndex]} ${this.currentYear}`
    },

    calendarDays() {
      const days = []
      const firstDay = new Date(this.currentYear, this.currentMonthIndex, 1)
      const lastDay = new Date(this.currentYear, this.currentMonthIndex + 1, 0)

      // –î–Ω–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
      const prevMonthLastDay = new Date(this.currentYear, this.currentMonthIndex, 0).getDate()
      const firstDayOfWeek = firstDay.getDay() === 0 ? 6 : firstDay.getDay() - 1

      for (let i = firstDayOfWeek - 1; i >= 0; i--) {
        const dayNumber = prevMonthLastDay - i
        days.push({
          day: dayNumber,
          date: this.formatDateToLocal(this.currentYear, this.currentMonthIndex - 1, dayNumber),
          isCurrentMonth: false,
          isDisabled: this.isDateDisabled(this.currentYear, this.currentMonthIndex - 1, dayNumber),
        })
      }

      // –î–Ω–∏ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
      for (let i = 1; i <= lastDay.getDate(); i++) {
        days.push({
          day: i,
          date: this.formatDateToLocal(this.currentYear, this.currentMonthIndex, i),
          isCurrentMonth: true,
          isDisabled: this.isDateDisabled(this.currentYear, this.currentMonthIndex, i),
        })
      }

      // –î–Ω–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞
      const totalCells = 42
      const nextMonthDays = totalCells - days.length
      for (let i = 1; i <= nextMonthDays; i++) {
        days.push({
          day: i,
          date: this.formatDateToLocal(this.currentYear, this.currentMonthIndex + 1, i),
          isCurrentMonth: false,
          isDisabled: this.isDateDisabled(this.currentYear, this.currentMonthIndex + 1, i),
        })
      }

      return days
    },
  },

  methods: {
    formatDateToLocal(year, month, day) {
      const date = new Date(year, month, day)
      const yyyy = date.getFullYear()
      const mm = String(date.getMonth() + 1).padStart(2, '0')
      const dd = String(date.getDate()).padStart(2, '0')
      return `${yyyy}-${mm}-${dd}`
    },

    // –ù–û–í–´–ô –ú–ï–¢–û–î: –ø—Ä–æ–≤–µ—Ä–∫–∞ disabled –¥–∞—Ç—ã
    isDateDisabled(year, month, day) {
      const date = new Date(year, month, day)
      const today = new Date()
      today.setHours(0, 0, 0, 0)

      // –û—Ç–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—ã –ü–û–°–õ–ï —Å–µ–≥–æ–¥–Ω—è (–∑–∞–≤—Ç—Ä–∞ –∏ –¥–∞–ª—å—à–µ)
      // –°–µ–≥–æ–¥–Ω—è –∏ –≤—Å–µ –ø—Ä–æ—à–ª—ã–µ –¥–∞—Ç—ã - –¥–æ—Å—Ç—É–ø–Ω—ã
      return date > today
    },

    canSelectDate(date) {
      const dateObj = new Date(date)
      const today = new Date()

      // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—ã (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏)
      const dateOnly = new Date(dateObj.getFullYear(), dateObj.getMonth(), dateObj.getDate())
      const todayOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate())

      // –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –¥–∞—Ç—ã –î–û —Å–µ–≥–æ–¥–Ω—è –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ
      return dateOnly <= todayOnly
    },

    prevMonth() {
      if (this.currentMonthIndex === 0) {
        this.currentMonthIndex = 11
        this.currentYear--
      } else {
        this.currentMonthIndex--
      }
    },

    nextMonth() {
      if (this.currentMonthIndex === 11) {
        this.currentMonthIndex = 0
        this.currentYear++
      } else {
        this.currentMonthIndex++
      }
    },

    isSelected(date) {
      if (!this.selectedRange.start || !this.selectedRange.end) return false
      return date === this.selectedRange.start || date === this.selectedRange.end
    },

    isInRange(date) {
      if (!this.selectedRange.start || !this.selectedRange.end) return false

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ timestamp –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      const dateTs = new Date(date).getTime()
      const startTs = new Date(this.selectedRange.start).getTime()
      const endTs = new Date(this.selectedRange.end).getTime()

      return dateTs > startTs && dateTs < endTs
    },

    isFirstInRange(date) {
      if (!this.selectedRange.start) return false
      return date === this.selectedRange.start
    },

    isLastInRange(date) {
      if (!this.selectedRange.end) return false
      return date === this.selectedRange.end
    },

    selectDate(date) {
      // –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: –Ω–µ–ª—å–∑—è –≤—ã–±—Ä–∞—Ç—å disabled –¥–∞—Ç—É
      if (!this.canSelectDate(date)) return

      if (!this.selectedRange.start || (this.selectedRange.start && this.selectedRange.end)) {
        this.selectedRange = { start: date, end: null }
      } else {
        if (date >= this.selectedRange.start) {
          this.selectedRange.end = date
        } else {
          this.selectedRange = { start: date, end: this.selectedRange.start }
        }
      }
    },

    handleSave() {
      this.$emit('save', this.selectedRange)
    },

    handleCancel() {
      this.$emit('cancel')
    },
  },

  template: `
    <div class="calendar">
      <div class="calendar-header">
        <h3>–í—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥</h3>
      </div>

      <div class="calendar-divider"></div>

      <div class="calendar-nav">
        <button @click="prevMonth" class="nav-button" aria-label="–ü—Ä–µ–¥—ã–¥—É—â–∏–π –º–µ—Å—è—Ü"></button>
        <div class="calendar-month">{{ currentMonthName }}</div>
        <button @click="nextMonth" class="nav-button" aria-label="–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü"></button>
      </div>

      <div class="calendar-grid">
        <div class="calendar-weekdays">
          <div v-for="day in ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å']" :key="day" class="weekday">
            {{ day }}
          </div>
        </div>

        <div class="calendar-days">
          <div
            v-for="day in calendarDays"
            :key="day.date"
            :class="[
              'calendar-day',
              {
                'selected': isFirstInRange(day.date) || isLastInRange(day.date),
                'in-range': isInRange(day.date),
                'other-month': !day.isCurrentMonth,
                'disabled': day.isDisabled
              },
            ]"
            @click="selectDate(day.date)"
          >
            {{ day.day }}
          </div>
        </div>
      </div>

      <div class="calendar-actions">
        <button class="btn-cancel" @click="handleCancel">–û—Ç–º–µ–Ω–∞</button>
        <button
          class="btn-save"
          @click="handleSave"
          :disabled="!selectedRange.start || !selectedRange.end"
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </button>
      </div>
    </div>
  `,
}

const BaseInput = {
  name: 'BaseInput',
  props: {
    modelValue: { type: String, default: '' },
    placeholder: { type: String, default: '' },
    type: { type: String, default: 'text' },
    disabled: { type: Boolean, default: false },
  },
  emits: ['update:modelValue'],
  template: `
    <input
      :type="type"
      :placeholder="placeholder"
      :value="modelValue"
      :disabled="disabled"
      @input="$emit('update:modelValue', $event.target.value)"
      class="base-input"
    />
  `,
}

const BasePagination = {
  name: 'BasePagination',

  props: {
    currentPage: {
      type: Number,
      default: 1,
    },
    totalPages: {
      type: Number,
      default: 1,
    },
    maxVisiblePages: {
      type: Number,
      default: 5,
    },
    disabled: {
      type: Boolean,
      default: false,
    },
  },

  emits: ['page-change'],

  computed: {
    // –í—ã—á–∏—Å–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    visiblePages() {
      const half = Math.floor(this.maxVisiblePages / 2)
      let start = Math.max(2, this.currentPage - half) // –ù–∞—á–∏–Ω–∞–µ–º —Å 2, —Ç.–∫. 1 –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
      let end = Math.min(this.totalPages - 1, start + this.maxVisiblePages - 1) // –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–π

      // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º start –µ—Å–ª–∏ end –¥–æ—Å—Ç–∏–≥ –ø—Ä–µ–¥–µ–ª–∞
      if (end === this.totalPages - 1) {
        start = Math.max(2, end - this.maxVisiblePages + 1)
      }

      const pages = []
      for (let i = start; i <= end; i++) {
        pages.push(i)
      }
      return pages
    },

    // –ù—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ –≤ –Ω–∞—á–∞–ª–µ
    showStartEllipsis() {
      return this.visiblePages.length > 0 && this.visiblePages[0] > 2
    },

    // –ù—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ –≤ –∫–æ–Ω—Ü–µ
    showEndEllipsis() {
      return (
        this.visiblePages.length > 0 &&
        this.visiblePages[this.visiblePages.length - 1] < this.totalPages - 1
      )
    },
  },

  methods: {
    handlePageChange(page) {
      if (page >= 1 && page <= this.totalPages) {
        this.$emit('page-change', page)
      }
    },
  },

  template: `
    <div class="base-pagination" :class="{ 'base-pagination--disabled': disabled }">
      <!-- –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" -->
      <button
        class="base-pagination__nav"
        :disabled="disabled || currentPage === 1"
        @click="handlePageChange(currentPage - 1)"
        aria-label="–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
      >
        <!-- –°—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ —á–µ—Ä–µ–∑ CSS -->
      </button>

      <!-- –ù–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü -->
      <div class="base-pagination__pages">
        <!-- –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ -->
        <button
          v-if="totalPages > 0"
          :class="['base-pagination__page', { 'base-pagination__page--active': currentPage === 1 }]"
          @click="handlePageChange(1)"
          aria-label="–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1"
        >
          1
        </button>

        <!-- –ú–Ω–æ–≥–æ—Ç–æ—á–∏–µ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã -->
        <span v-if="showStartEllipsis" class="base-pagination__ellipsis"> ... </span>

        <!-- –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã -->
        <button
          v-for="page in visiblePages"
          :key="page"
          :class="[
            'base-pagination__page',
            { 'base-pagination__page--active': currentPage === page },
          ]"
          @click="handlePageChange(page)"
          :aria-label="'–°—Ç—Ä–∞–Ω–∏—Ü–∞ ' + page"
        >
          {{ page }}
        </button>

        <!-- –ú–Ω–æ–≥–æ—Ç–æ—á–∏–µ –ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π -->
        <span v-if="showEndEllipsis" class="base-pagination__ellipsis"> ... </span>

        <!-- –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–µ—Å–ª–∏ –±–æ–ª—å—à–µ 1) -->
        <button
          v-if="totalPages > 1"
          :class="[
            'base-pagination__page',
            { 'base-pagination__page--active': currentPage === totalPages },
          ]"
          @click="handlePageChange(totalPages)"
          :aria-label="'–°—Ç—Ä–∞–Ω–∏—Ü–∞ ' + totalPages"
        >
          {{ totalPages }}
        </button>
      </div>

      <!-- –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥" -->
      <button
        class="base-pagination__nav"
        :disabled="disabled || currentPage === totalPages"
        @click="handlePageChange(currentPage + 1)"
        aria-label="–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
      >
        <!-- –°—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ —á–µ—Ä–µ–∑ CSS -->
      </button>
    </div>
  `,
}

const BaseSelect = {
  name: 'BaseSelect',

  props: {
    modelValue: {
      type: [String, Number],
      default: '',
    },
    options: {
      type: Array,
      default: () => [],
    },
    placeholder: {
      type: String,
      default: '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç',
    },
    disabled: {
      type: Boolean,
      default: false,
    },
  },

  emits: ['update:modelValue'],

  data() {
    return {
      isOpen: false,
    }
  },

  computed: {
    displayText() {
      if (!this.modelValue) return this.placeholder
      const selectedOption = this.options.find((opt) => opt.value === this.modelValue)
      return selectedOption ? selectedOption.label : this.placeholder
    },
  },

  methods: {
    toggleDropdown() {
      if (!this.disabled) {
        this.isOpen = !this.isOpen
      }
    },

    selectOption(option) {
      if (option.disabled) return
      this.$emit('update:modelValue', option.value)
      this.isOpen = false
    },

    clickOutsideHandler(event) {
      if (this.$refs.dropdownRef && !this.$refs.dropdownRef.contains(event.target)) {
        this.isOpen = false
      }
    },
  },

  mounted() {
    document.addEventListener('click', this.clickOutsideHandler)
  },

  beforeUnmount() {
    document.removeEventListener('click', this.clickOutsideHandler)
  },

  template: `
    <div
      class="base-select"
      ref="dropdownRef"
      :class="{ 'base-select--open': isOpen, 'base-select--disabled': disabled }"
    >
      <!-- –í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ -->
      <div class="base-select__trigger" @click="toggleDropdown">
        <span class="base-select__value" :class="{ 'base-select__placeholder': !modelValue }">
          {{ displayText }}
        </span>
        <span class="base-select__arrow"></span>
      </div>

      <!-- –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ -->
      <div v-show="isOpen" class="base-select__dropdown">
        <div
          v-for="option in options"
          :key="option.value"
          class="base-select__option"
          :class="{
            'base-select__option--selected': option.value === modelValue,
            'base-select__option--disabled': option.disabled,
          }"
          @click="selectOption(option)"
        >
          {{ option.label }}
        </div>
      </div>
    </div>
  `,
}

const BaseTable = {
  name: 'BaseTable',

  props: {
    columns: {
      type: Array,
      required: true,
    },
    data: {
      type: Array,
      default: () => [],
    },
    loading: {
      type: Boolean,
      default: false,
    },
    error: {
      type: Boolean,
      default: false,
    },
    selectedItems: {
      type: Array,
      default: () => [],
    },
    isIndeterminate: {
      type: Boolean,
      default: false,
    },
    sortBy: {
      type: String,
      default: '',
    },
    sortDirection: {
      type: String,
      default: 'asc',
    },
  },

  emits: ['sort', 'retry', 'select-item', 'select-all'],

  methods: {
    handleSort(columnKey) {
      this.$emit('sort', columnKey)
    },

    getEducationTags(educationData) {
      if (!educationData) return []

      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞
      if (Array.isArray(educationData)) {
        return educationData
      }

      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏
      if (typeof educationData === 'string') {
        return educationData
          .split(',')
          .map((tag) => tag.trim())
          .filter((tag) => tag)
      }

      return [educationData]
    },
  },

  template: `
    <!-- –û–±–µ—Ä—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã —Å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º —Ç–µ–≥–æ–º -->
    <div class="base-table" role="table" aria-label="–¢–∞–±–ª–∏—Ü–∞ —É—á—Ä–µ–∂–¥–µ–Ω–∏–π">
      <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã —Å —á–µ–∫–±–æ–∫—Å–æ–º Select All -->
      <div class="base-table__header" role="rowgroup">
        <div class="base-table__header-row" role="row">
          <!-- –ß–µ–∫–±–æ–∫—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫ -->
          <div class="base-table__header-cell base-table__checkbox-cell" role="columnheader">
            <input
              type="checkbox"
              :indeterminate="isIndeterminate"
              @change="$emit('select-all', $event.target.checked)"
              aria-label="–í—ã–±—Ä–∞—Ç—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏"
            />
          </div>

          <!-- –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ -->
          <div
            v-for="column in columns"
            :key="column.key"
            :class="[
              'base-table__header-cell',
              {
                'base-table__header-cell--sortable': column.sortable,
                'base-table__header-cell--hoverable': true
              }
            ]"
            @click="column.sortable && handleSort(column.key)"
            role="columnheader"
          >
            <div class="header-cell-content">
              <span>{{ column.label }}</span>
              <div v-if="column.sortable" class="table-sort">
                <div
                  :class="[
                    'table-sort__arrow table-sort__arrow--up',
                    { 'active': sortBy === column.key && sortDirection === 'asc' }
                  ]"
                ></div>
                <div
                  :class="[
                    'table-sort__arrow table-sort__arrow--down',
                    { 'active': sortBy === column.key && sortDirection === 'desc' }
                  ]"
                ></div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- –¢–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã -->
      <div class="base-table__body" role="rowgroup">
        <!-- –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ -->
        <div v-if="loading" class="base-table__loading" role="row">
          <div v-for="n in 5" :key="n" class="base-table__skeleton-row" role="row">
            <div
              v-for="column in columns"
              :key="column.key"
              class="base-table__skeleton-cell"
              role="cell"
            >
              <div class="skeleton"></div>
            </div>
          </div>
        </div>

        <!-- –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏ -->
        <div v-else-if="error" class="base-table__error" role="row">
          <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö</p>
          <BaseButton variant="primary" @click="$emit('retry')">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É</BaseButton>
        </div>

        <!-- –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ -->
        <div v-else-if="data.length === 0" class="base-table__empty" role="row">
          <p>–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
        </div>

        <!-- –î–∞–Ω–Ω—ã–µ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏ –≤ —Å—Ç—Ä–æ–∫–∞—Ö -->
        <template v-else>
          <div
            v-for="(row, index) in data"
            :key="row.uuid || index"
            class="base-table__row"
            role="row"
          >
            <!-- –ß–µ–∫–±–æ–∫—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ -->
            <div class="base-table__cell base-table__checkbox-cell" role="cell">
              <input
                type="checkbox"
                :checked="selectedItems.includes(row.uuid)"
                @change="$emit('select-item', row.uuid, $event.target.checked)"
                :aria-label="'–í—ã–±—Ä–∞—Ç—å —à–∫–æ–ª—É ' + row.name"
              />
            </div>

            <!-- –Ø—á–µ–π–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ -->
            <div
              v-for="column in columns"
              :key="column.key"
              class="base-table__cell"
              role="cell"
              :class="{ 'education-cell': column.key === 'education_level' }"
            >
              <template v-if="column.key === 'education_level' && row[column.key]">
                <div class="education-tags">
                  <span
                    v-for="(tag, tagIndex) in getEducationTags(row[column.key])"
                    :key="tagIndex"
                    class="education-tag"
                  >
                    {{ tag }}
                  </span>
                </div>
              </template>
              <template v-else>
                {{ row[column.key] }}
              </template>
            </div>
          </div>
        </template>
      </div>
    </div>
  `,
}

console.log('üéØ app.js –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!')

// ========== APP –ö–û–ú–ü–û–ù–ï–ù–¢ ==========
const App = {
  name: 'App',

  data() {
    return {
      // –î–∞–Ω–Ω—ã–µ —à–∫–æ–ª
      schools: [],
      searchSchools: [],
      loading: false,
      error: null,
      totalPages: 1,
      currentPage: 1,
      currentRegion: null,

      // –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã
      searchValue: '',
      searchTimeout: null,
      errorPage: 1,
      regions: [],
      selectedRegion: '',
      filteredCurrentPage: 1,
      sortBy: '',
      sortDirection: '',
      // –§–∏–ª—å—Ç—Ä—ã
      schoolTypes: [
        { value: 'all', label: '–í—Å–µ –≤–∏–¥—ã' },
        { value: 'school', label: '–®–∫–æ–ª—ã' },
        { value: 'college', label: '–ö–æ–ª–ª–µ–¥–∂–∏' },
        { value: 'university', label: '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã' },
      ],
      statusTypes: [
        { value: 'all', label: '–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã' },
        { value: 'active', label: '–ê–∫—Ç–∏–≤–Ω—ã–µ' },
        { value: 'inactive', label: '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ' },
      ],
      selectedType: 'all',
      selectedStatus: 'all',

      // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
      pageSizes: [10, 25, 50],
      selectedPageSize: 10,

      // –ö–∞–ª–µ–Ω–¥–∞—Ä—å
      showCalendar: false,
      selectedDateRange: null,

      // –í—ã–±–æ—Ä —à–∫–æ–ª
      selectedSchools: [],

      // –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
      tableColumns: [
        { key: 'region', label: '–†–µ–≥–∏–æ–Ω', sortable: true },
        { key: 'name', label: '–ù–∞–∑–≤–∞–Ω–∏–µ', sortable: true },
        { key: 'address', label: '–ê–¥—Ä–µ—Å', sortable: true },
        { key: 'education_level', label: '–£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è', sortable: true },
      ],
    }
  },

  computed: {
    dateRange() {
      return window.formatDateRange(this.selectedDateRange)
    },

    isIndeterminate() {
      if (this.displayedSchools.length === 0) return false
      const selectedOnCurrentPage = this.displayedSchools.filter((school) =>
        this.selectedSchools.includes(school.uuid)
      ).length
      return selectedOnCurrentPage > 0 && selectedOnCurrentPage < this.displayedSchools.length
    },

    filteredSchools() {
      return window.filterSchools(
        this.schools,
        this.searchSchools,
        this.searchValue,
        this.selectedStatus
      )
    },

    displayedSchools() {
      return window.getDisplayedSchools(
        this.filteredSchools,
        this.schools,
        this.searchValue,
        this.selectedStatus,
        this.filteredCurrentPage,
        this.selectedPageSize
      )
    },

    filteredTotalPages() {
      return window.getTotalPages(
        this.filteredSchools,
        this.totalPages,
        this.searchValue,
        this.selectedStatus,
        this.selectedPageSize
      )
    },

    currentDisplayPage() {
      return window.getCurrentPage(
        this.filteredCurrentPage,
        this.currentPage,
        this.searchValue,
        this.selectedStatus
      )
    },
    startRecord() {
      let start
      if (this.searchValue.trim() !== '' || this.selectedStatus !== 'all') {
        start = (this.currentDisplayPage - 1) * this.selectedPageSize + 1
      } else {
        start = (this.currentPage - 1) * this.selectedPageSize + 1
      }

      // –ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π
      const total =
        this.searchValue.trim() !== '' || this.selectedStatus !== 'all'
          ? this.filteredSchools.length
          : this.schools.length
      return Math.min(start, total)
    },

    endRecord() {
      let end
      if (this.searchValue.trim() !== '' || this.selectedStatus !== 'all') {
        end = this.currentDisplayPage * this.selectedPageSize
      } else {
        end = this.currentPage * this.selectedPageSize
      }

      const total =
        this.searchValue.trim() !== '' || this.selectedStatus !== 'all'
          ? this.filteredSchools.length
          : this.schools.length
      return Math.min(end, total)
    },

    displayedSchools() {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
      const sortedData = window.sortSchools(this.filteredSchools, this.sortBy, this.sortDirection)

      // –ü–æ—Ç–æ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
      const startIndex = (this.filteredCurrentPage - 1) * this.selectedPageSize
      const endIndex = startIndex + this.selectedPageSize
      return sortedData.slice(startIndex, endIndex)
    },
  },

  watch: {
    selectedRegion(newRegionId) {
      this.currentPage = 1
      this.filteredCurrentPage = 1
      this.searchValue = ''
      const finalRegionId = newRegionId === '' ? null : newRegionId
      this.fetchSchools(1, this.selectedPageSize, finalRegionId, false)
    },

    selectedStatus(newStatus, oldStatus) {
      this.filteredCurrentPage = 1
      if (newStatus === 'all' && oldStatus !== 'all') {
        console.log('üîÑ –í–æ–∑–≤—Ä–∞—Ç –∫ "–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã"')
        this.currentPage = 1
        this.fetchSchools(1, this.selectedPageSize, this.currentRegion, false)
      }
    },

    selectedType(newType) {
      const validatedType = window.validateSchoolType(newType)
      if (validatedType !== newType) {
        this.selectedType = validatedType
      }
    },
  },

  methods: {
    // API –º–µ—Ç–æ–¥—ã

    async fetchSchools(page = 1, count = 10, regionId = null, isAppend = false) {
      if (!isAppend && page === 1) {
        this.schools = []
      }

      this.loading = true
      this.error = null
      this.currentRegion = regionId

      try {
        const safePage = Math.max(1, Math.min(page, 100))
        // –ò–°–ü–û–õ–¨–ó–£–ï–ú schoolsApi.js –≤–º–µ—Å—Ç–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        const response = await window.getSchools(safePage, count, regionId)

        // –ò–°–ü–û–õ–¨–ó–£–ï–ú schoolsApi.js –≤–º–µ—Å—Ç–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        const newSchools = window.transformSchoolData(response.list || [])

        if (isAppend) {
          this.schools = [...this.schools, ...newSchools]
          this.searchSchools = [...this.searchSchools, ...newSchools]
        } else {
          this.schools = newSchools
          if (page === 1) {
            this.searchSchools = newSchools
          } else {
            this.searchSchools = [...this.searchSchools, ...newSchools]
          }
        }

        this.totalPages = Math.min(response.pages_count || 1, 100)
        this.currentPage = safePage

        console.log(
          `‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${safePage} –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –î–ª—è –ø–æ–∏—Å–∫–∞: ${this.searchSchools.length} —à–∫–æ–ª`
        )
      } catch (err) {
        console.log(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${page}:`, err.message)
        this.error = `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page} –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.`
        if (!isAppend && page === 1) {
          this.schools = []
        }
      } finally {
        this.loading = false
      }
    },

    clearError() {
      this.error = window.clearError()
    },

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ UI
    handlePageSizeChange(newSize) {
      window.handlePageSizeChange(newSize, this.fetchSchools, this.currentRegion)
    },

    handleSelectAll(isSelected) {
      this.selectedSchools = window.handleSelectAll(
        this.selectedSchools,
        this.displayedSchools,
        isSelected
      )
    },

    handleSelectSchool(schoolId, isSelected) {
      this.selectedSchools = window.handleSelectSchool(this.selectedSchools, schoolId, isSelected)
    },

    handleExport() {
      window.exportSchoolsToTxt(this.selectedSchools, this.schools)
    },

    handleSort(columnKey) {
      const newDirection = window.getNextSortDirection(this.sortBy, columnKey, this.sortDirection)

      this.sortBy = columnKey
      this.sortDirection = newDirection

      console.log(`üîÑ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: ${columnKey}, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${newDirection}`)
    },
    async handlePageChange(page) {
      this.errorPage = page
      this.clearError()
      await window.handlePageChange(
        page,
        this.fetchSchools,
        this.searchValue,
        this.selectedStatus,
        this.currentRegion,
        this.selectedPageSize
      )
    },

    async handleFirstPage() {
      this.clearError()
      await window.handleFirstPage(this.fetchSchools, this.selectedPageSize, this.currentRegion)
    },

    handleSearch() {
      window.handleSearch(this.searchValue, () => {
        this.filteredCurrentPage = 1
      })
    },

    async handleRetry() {
      this.clearError()
      await window.handleRetry(
        this.fetchSchools,
        this.currentPage,
        this.selectedPageSize,
        this.currentRegion
      )
    },

    clearSearch() {
      window.clearSearch()
      this.searchValue = ''
      this.filteredCurrentPage = 1
    },

    applyDateRange(range) {
      window.applyDateRange(range)
      this.showCalendar = false
      this.selectedDateRange = range
    },

    async loadRegions() {
      // –ò–°–ü–û–õ–¨–ó–£–ï–ú schoolsApi.js –≤–º–µ—Å—Ç–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
      this.regions = await window.getRegions()
      console.log('‚úÖ –†–µ–≥–∏–æ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.regions.length, '—à—Ç.')
    },

    async init() {
      await window.initApp(this.fetchSchools, this.loadRegions, this.selectedPageSize)
    },
  },

  mounted() {
    this.init()
  },

  template: `
  <div id="app">
    <!-- –í–ï–†–•–ù–Ø–Ø –ß–ï–†–ù–ê–Ø –®–ê–ü–ö–ê -->
    <header class="tech-header-group-1">
      <div class="tech-header">
        <div class="header-container">
          <div class="header-left">
            <img src="images/logo.png" alt="–õ–æ–≥–æ—Ç–∏–ø" class="logo">
          </div>
          <div class="header-right">
            <div class="logo-dark">School</div>
            <div class="contacts-block">
              <div>+7 (495) 123-45-67</div>
              <div>info@schools-edu.ru</div>
              <div>schools-education.com</div>
            </div>
          </div>
        </div>
      </div>

      <div class="tech-head-container">
        <div class="tech-head-2xl">–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ</div>
      </div>
    </header>

    <main class="main-content">
      <!-- –ë–ï–õ–ê–Ø –ü–û–õ–û–°–ê –ú–ï–ñ–î–£ –®–ê–ü–ö–û–ô –ò –ö–û–ù–¢–ï–ù–¢–û–ú -->
      <div class="content-spacer"></div>

      <!-- –û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ô–ù–ï–† –° –°–ï–†–´–ú –§–û–ù–û–ú -->
      <div class="page-container">

        <!-- –ë–ï–õ–´–ô –ë–õ–û–ö –° –¢–ê–ë–õ–ò–¶–ï–ô -->
        <section class="table-section">
          <!-- –í–ï–†–•–ù–Ø–Ø –ü–ê–ù–ï–õ–¨ –° –ó–ê–ì–û–õ–û–í–ö–û–ú –ò –ö–ù–û–ü–ö–ê–ú–ò -->
          <div class="table-header">
            <h1 class="table-title">–¢–∞–±–ª–∏—Ü–∞ —É—á—Ä–µ–∂–¥–µ–Ω–∏–π</h1>

            <div class="table-actions">
              <!-- –ü–û–ò–°–ö -->
              <div class="table-search">
                <BaseInput
                  v-model="searchValue"
                  placeholder="–ü–æ–∏—Å–∫"
                  @input="handleSearch"
                />
              </div>

              <!-- –ö–ù–û–ü–ö–ê –°–ö–ê–ß–ò–í–ê–ù–ò–Ø -->
              <button class="download-btn-main" @click="handleExport" :disabled="selectedSchools.length === 0">
                <div class="download-icon"></div>
                <span>–°–∫–∞—á–∞—Ç—å</span>
              </button>
            </div>
          </div>

          <!-- –í–ï–†–•–ù–ò–ï –§–ò–õ–¨–¢–†–´ -->
          <div class="filters-row">
            <!-- –ö–ê–õ–ï–ù–î–ê–†–¨ -->
            <div class="filter-item">
              <div class="calendar-filter" @click="showCalendar = true">
                <div class="calendar-icon"></div>
                <span class="calendar-text">{{ dateRange || '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥' }}</span>
              </div>
            </div>

            <!-- –í–°–ï –†–ï–ì–ò–û–ù–´ -->
            <div class="filter-item filter-select">
              <BaseSelect
                v-model="selectedRegion"
                :options="[
                  { value: '', label: '–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã' },
                  ...regions.map(r => ({ value: r.id, label: r.name }))
                ]"
                placeholder="–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã"
              />
            </div>

            <!-- –í–°–ï –í–ò–î–´ -->
            <div class="filter-item filter-select">
              <BaseSelect
                v-model="selectedType"
                :options="schoolTypes"
                placeholder="–í—Å–µ –≤–∏–¥—ã"
              />
            </div>

            <!-- –í–°–ï –°–¢–ê–¢–£–°–´ -->
            <div class="filter-item filter-select">
              <BaseSelect
                v-model="selectedStatus"
                :options="statusTypes"
                placeholder="–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã"
              />
            </div>
          </div>

          <!-- –ö–ê–õ–ï–ù–î–ê–†–¨ -->
          <div v-if="showCalendar" class="calendar-overlay" @click="showCalendar = false">
            <div class="calendar-container" @click.stop>
              <BaseCalendar @save="applyDateRange" @cancel="showCalendar = false" />
            </div>
          </div>

          <!-- –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê -->
          <div v-if="searchValue.trim() !== ''" class="search-results-info">
            üîç –ù–∞–π–¥–µ–Ω–æ: <strong>{{ filteredSchools.length }}</strong> —à–∫–æ–ª –ø–æ –∑–∞–ø—Ä–æ—Å—É "{{ searchValue }}"
          </div>

          <!-- –û–°–ù–û–í–ù–û–ï –°–û–î–ï–†–ñ–ò–ú–û–ï -->
          <div v-if="loading" class="status-message">
            <div class="loading-spinner">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
          </div>

          <div v-else-if="error" class="status-message error">
            <div class="error-icon">‚ö†Ô∏è</div>
            <h3>–í—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞</h3>
            <p>–°—Ç—Ä–∞–Ω–∏—Ü–∞ {{ errorPage }} –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</p>
            <p class="error-detail">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É</p>

            <div class="button-group">
              <BaseButton @click="handleRetry" variant="primary">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É</BaseButton>
              <BaseButton @click="handleFirstPage" variant="secondary">–ù–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É</BaseButton>
            </div>
          </div>

          <div v-else>
            <!-- –û–ë–ï–†–¢–ö–ê –î–õ–Ø –¢–ê–ë–õ–ò–¶–´ –° –î–ê–ù–ù–´–ú–ò -->
            <div class="table-data-container">
              <!-- –¢–ê–ë–õ–ò–¶–ê –° –î–ê–ù–ù–´–ú–ò -->
              <BaseTable
  :columns="tableColumns"
  :data="displayedSchools"
  :loading="loading"
  :selected-items="selectedSchools"
  :is-indeterminate="isIndeterminate"
  :sort-by="sortBy"
  :sort-direction="sortDirection"
  @select-all="handleSelectAll"
  @select-item="handleSelectSchool"
  @sort="handleSort"
/>
            </div>

            <!-- –ù–û–í–´–ô –ö–û–ù–¢–ï–ô–ù–ï–† –ü–ê–ì–ò–ù–ê–¶–ò–ò –í–ù–ò–ó–£ -->
<div class="table-pagination-container">
  <!-- –õ–ï–í–ê–Ø –ß–ê–°–¢–¨: –ü–ê–ì–ò–ù–ê–¶–ò–Ø -->
  <div class="pagination-left">
    <BasePagination
      v-if="filteredTotalPages > 1"
      :current-page="currentPage"
      :total-pages="filteredTotalPages"
      @page-change="handlePageChange"
    />
  </div>

  <!-- –ü–†–ê–í–ê–Ø –ß–ê–°–¢–¨: –ò–ù–§–û–†–ú–ê–¶–ò–Ø + "–ü–û–ö–ê–ó–´–í–ê–¢–¨ –ü–û" -->
  <div class="pagination-right">
    <span class="pagination-info">
      –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å {{ startRecord }}-{{ endRecord }} –∏–∑ {{ filteredSchools.length }} –∑–∞–ø–∏—Å–µ–π
    </span>

    <div class="page-size-control">
      <span class="page-size-label">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å</span>
      <BaseSelect
        v-model="selectedPageSize"
        :options="pageSizes.map((size) => ({ value: size, label: String(size) }))"
        @update:modelValue="handlePageSizeChange"
        class="page-size-select"
      />
    </div>
  </div>
</div>
          </div>
        </section>
      </div>
    </main>
  </div>
`,
}

if (typeof Vue === 'undefined') {
  console.error('‚ùå Vue –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ HTML.')
} else {
  console.log('‚úÖ Vue –∑–∞–≥—Ä—É–∂–µ–Ω! –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...')

  const { createApp } = Vue

  const app = createApp(App)

  // –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´
  const components = [
    ['BaseButton', BaseButton],
    ['BaseInput', BaseInput],
    ['BaseSelect', BaseSelect],
    ['BaseTable', BaseTable],
    ['BasePagination', BasePagination],
    ['BaseCalendar', BaseCalendar],
  ]

  components.forEach(([name, component]) => {
    if (typeof component !== 'undefined') {
      app.component(name, component)
      console.log(`‚úÖ ${name} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!`)
    } else {
      console.error(`‚ùå ${name} –ù–ï –Ω–∞–π–¥–µ–Ω!`)
    }
  })

  app.mount('#app')
}
